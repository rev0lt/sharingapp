package splat.sharingcontroller;

import network.NetworkEvent;
import serverconnection.HandshakeListener;
import serverconnection.PingListener;
import serverconnection.ServerConnection;
import splat.Splat;
import splat.OnDataReceiveListener;
import splat.sharingview.ShootActivity;
import network.SharingType;

public class ShootController {
	ShootActivity view;
	private Splat splat;

    public ShootController(ShootActivity view) {
        this.view = view;
        ServerConnection sc = NetworkController.getServerConnection();
        if (sc != null) {
            // We backed into this activity from the lobby
            sc.setOnReceiveNetworkEventListener(new ShootNetworkEventListener());
        }
        setupSplat();
    }
    
    /**
     * Sets up the splat device and its listeners.
     * 
     * @author sbobra
     */
    private void setupSplat() {
        splat = Splat.getInstance();
        splat.setOnDataReceiveListener(new OnDataReceiveListener() {
            @Override
            public void onDataReceive(Splat splat, byte data) {
                //blah
            }
        });
        splat.turnOnLed();
    }
    
    /**
     * Called when user is shooting ID to another user
     * 
     * @author sbobra
     */
    public void shootInfo() {
    	byte data = 0;
        splat.sendData(data);
    }
    
    private class ShootNetworkEventListener extends HandshakeListener {

        @Override
        public void onReceiveNetworkEvent(final ServerConnection sc, final NetworkEvent evt) {
            super.onReceiveNetworkEvent(sc, evt);
            if (evt.getType().equals(SharingType.USER_DATA)) {
            	/*
                lobbyActivity.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        toGame((Short) evt.getData());
                    }
                });*/
            }
        }
    }
}
